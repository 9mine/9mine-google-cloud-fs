fs: |
    {% include './common.j2' %} 
    fs:
    # root
    "/":
        readdir: 
        sh: ls /accounts
        getattr:
        sh: *dir 
        # /<id>
        "/[0-9]+":
        name: id
        readdir: 
            list: 
            - compute
        getattr: 
            sh: *dir
        # /<id>/compute
        "/compute":
            readdir:
                list: 
                - instances
            getattr:
            sh: *dir

            # /<id>/compute/instances
            "/instances":
            readdir:
                list: 
                - list
                - describe 
            getattr:
                sh: *dir 

            # /<id>/compute/instances/list
            "/list":
                read_file:
                sh:  gcloud compute instances list --account=`cat /accounts/${id}/email` --project=`cat /accounts/${id}/project` --zones=`cat /accounts/${id}/zone`
                getattr: 
                sh: *file 
            # /<id>/compute/instances/describe   
            "/describe":
                getattr: 
                sh: *dir
                readdir: 
                sh: gcloud compute instances list --account=`cat /accounts/${id}/email` --project=`cat /accounts/${id}/project` --zones=`cat /accounts/${id}/zone` --format=json | jq -r '.[].name'
                
                # /<id>/compute/instances/describe/<compute_name>
                "/[a-z0-9_-]+":
                name: compute_name
                readdir: 
                    sh: gcloud compute instances describe ${compute_name} --account=`cat /accounts/${id}/email` --project=`cat /accounts/${id}/project` --zone=`cat /accounts/${id}/zone` --format=json | jq -r 'keys[]' 
                getattr:
                    sh: *dir

                # /<id>/compute/instances/describe/<compute_name>/<attribute>
                "/[a-zA-Z0-9_-]+":
                    name: attribute
                    read_file: 
                    sh: gcloud compute instances describe "${compute_name}" --account=`cat /accounts/${id}/email` --project=`cat /accounts/${id}/project` --zone=`cat /accounts/${id}/zone` --format=json | jq '.'${attribute}''
                    getattr: 
                    sh: *file

files:
    profile: 
        load file2chan
        load std
        ndb/cs
        test -d /mnt/registry || mkdir -p /mnt/registry

        GCLOUD_DIR = /tmp/gcloud/cmd
        mount -A tcp!registry.dev.metacoma.io!30099 /mnt/registry
        test -d $GCLOUD_DIR || mkdir -p $GCLOUD_DIR
        chmod a+rwx $GCLOUD_DIR
        echo --- you are here
        dir = /
        port = 1917
        port2 = 2000
        echo --- after ports


        file2chan $GCLOUD_DIR^/gcloud {
            if {~ ${rget offset} 0} {
                cat $output_file | putrdata
            } {
                rread ''
            }
            } {
            load mpexpr
            var=${expr 10 rand}
            echo new id is $var
            echo hostname is `{os hostname}
            (key project zone) = `{echo ${rget data}} 
            echo $project > /dev/sysname
            echo $zone
            `{os /bin/bash -c 'mkdir -p /accounts/'^$var}
            `{os /bin/bash -c 'echo '^$key^' | base64 -d > /accounts/'^$var^'/key'}
            `{os /bin/bash -c 'gcloud auth activate-service-account --key-file /accounts/'^$var^'/key --quiet'}
            `{os /bin/bash -c 'cat /accounts/'^$var^'/key | jq -r .client_email > /accounts/'^$var^'/email'}
            `{os /bin/bash -c 'echo '^$project^' > /accounts/'^$var^'/project'}
            `{os /bin/bash -c 'echo '^$zone^' > /accounts/'^$var^'/zone'}
            grid/reglisten -A -r description 'user id is '^$var tcp!*!^$port2 { export /exprt/fs/^$var & } &
            port2=${expr $port2 1 +}
            }
        chmod a+rwx $GCLOUD_DIR^/gcloud
        mkdir -p /exprt/fs
        sh -n -c 'os execfuse-static /execfuse-fs /usr/inferno-os/exprt/fs'
        echo --- after file2chan
        listen -A -t 'tcp!*!'$port { export /tmp/gcloud & } &